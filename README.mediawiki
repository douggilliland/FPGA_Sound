= FPGA Sound =

Make sound from an FPGA starting from first principles.

* Start with single note - Middle C
* [https://www.youtube.com/watch?v=CKi78RF7vck Middle C on YouTube]
* Make waveforms, save builds
** [https://github.com/douggilliland/FPGA_Sound/tree/Square-Wave-Middle-C Square Wave Middle C build]
** [https://github.com/douggilliland/FPGA_Sound/tree/Sine-Wave-Middle-C Sine Wave Middle C build]
* [https://github.com/douggilliland/FPGA_Sound/tree/main/Filter Audio Filter / Scaler]

== Square Wave ==

*  FPGA clock is 50 MHz
* Divide by counter to get note
* Divisor is 50_000_000 / 261.6256 = 191_112.79
* Can only do integer divisor, round up to 191_113
* 191_113 dec = 2EA89 hex
* Count from 0 to 2EA88
* Set low at count = 0, set high at 1/2 wave (17544 hex)
* Minimal error < 1 part in 191_112
* Resources
** 42 Logic cells
** 20 Registers

== Sine Wave ==

*  FPGA clock is 50 MHz
* Prescale 50 MHz by 3 to get to 16.667 KHz
* 256 samples in the table - one full wave
* 256 clocks for PWM
* Produces 254.31 Hz
* Resources
** 174 Logic cells
** 28 Registers

<img src="https://raw.githubusercontent.com/douggilliland/FPGA_Sound/main/MiddleCSine/MiddleC_Scope_Cap.png"></img>
